//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "GDJSDialogs.h"


// Declare the bitmap loading function
extern void wxCB65InitBitmapResources();

static bool bBitmapLoaded = false;


BaseUploadOnlineDialog::BaseUploadOnlineDialog(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCB65InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxFlexGridSizer* flexGridSizer3 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer3->SetFlexibleDirection( wxBOTH );
    flexGridSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer3->AddGrowableCol(0);
    flexGridSizer3->AddGrowableRow(1);
    this->SetSizer(flexGridSizer3);
    
    m_staticText15 = new wxStaticText(this, wxID_ANY, _("Your game have been packaged and is ready to be uploaded!  Enter the information about your game in the fields and then click on 'Upload my game'."), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer3->Add(m_staticText15, 0, wxALL, 5);
    
    webView = wxWebView::New(this,wxID_ANY,"www.gamedevshare.com/send.php",wxDefaultPosition,wxSize(278,334),wxWebViewBackendDefault, wxNO_BORDER);
    flexGridSizer3->Add(webView, 0, wxTOP|wxBOTTOM|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer13 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer13->SetFlexibleDirection( wxBOTH );
    flexGridSizer13->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer13->AddGrowableCol(0);
    flexGridSizer13->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer13, 1, wxALL|wxEXPAND, 0);
    
    wxFlexGridSizer* flexGridSizer19 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer19->SetFlexibleDirection( wxBOTH );
    flexGridSizer19->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer19->AddGrowableCol(1);
    flexGridSizer19->AddGrowableRow(0);
    
    flexGridSizer13->Add(flexGridSizer19, 1, wxALL|wxEXPAND, 0);
    
    m_staticText151 = new wxStaticText(this, wxID_ANY, _("The file to be uploaded was saved at this location on your computer:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer19->Add(m_staticText151, 0, wxALL, 5);
    
    packageLocationEdit = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_READONLY);
    
    flexGridSizer19->Add(packageLocationEdit, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 5);
    
    m_staticLine25 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxLI_HORIZONTAL);
    
    flexGridSizer3->Add(m_staticLine25, 0, wxTOP|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer27 = new wxFlexGridSizer(  0, 3, 0, 0);
    flexGridSizer27->SetFlexibleDirection( wxBOTH );
    flexGridSizer27->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer27->AddGrowableCol(1);
    flexGridSizer27->AddGrowableRow(0);
    
    flexGridSizer3->Add(flexGridSizer27, 1, wxTOP|wxBOTTOM|wxEXPAND, 0);
    
    m_staticBitmap31 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("helpicon")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer27->Add(m_staticBitmap31, 0, wxALL, 5);
    
    m_hyperLink29 = new wxHyperlinkCtrl(this, wxID_ANY, _("Help"), wxT("http://wiki.compilgames.net/doku.php/en/game_develop/tutorials/howtodistribute"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    m_hyperLink29->SetNormalColour(wxColour(wxT("#0000FF")));
    m_hyperLink29->SetHoverColour(wxColour(wxT("#0000FF")));
    m_hyperLink29->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    flexGridSizer27->Add(m_hyperLink29, 0, wxALL, 5);
    
    m_button6 = new wxButton(this, wxID_ANY, _("Close"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer27->Add(m_button6, 1, wxALL|wxALIGN_RIGHT|wxALIGN_BOTTOM, 5);
    
    SetMinSize( wxSize(800,750) );
    SetSizeHints(800,750);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    m_button6->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseUploadOnlineDialog::OnCloseBtClicked), NULL, this);
    
}

BaseUploadOnlineDialog::~BaseUploadOnlineDialog()
{
    m_button6->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseUploadOnlineDialog::OnCloseBtClicked), NULL, this);
    
}

BaseProjectExportDialog::BaseProjectExportDialog(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCB65InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxFlexGridSizer* flexGridSizer33 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer33->SetFlexibleDirection( wxBOTH );
    flexGridSizer33->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer33->AddGrowableCol(0);
    flexGridSizer33->AddGrowableRow(0);
    this->SetSizer(flexGridSizer33);
    
    m_staticText59 = new wxStaticText(this, wxID_ANY, _("Choose where do you want to export the game:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer33->Add(m_staticText59, 0, wxALL, 5);
    
    exportChoice = new wxChoicebook(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxBK_DEFAULT);
    
    flexGridSizer33->Add(exportChoice, 0, wxALL, 5);
    
    m_panel63 = new wxPanel(exportChoice, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    exportChoice->AddPage(m_panel63, _("GameDevShare.com"), true);
    
    wxFlexGridSizer* flexGridSizer55 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer55->SetFlexibleDirection( wxBOTH );
    flexGridSizer55->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer55->AddGrowableCol(0);
    flexGridSizer55->AddGrowableRow(1);
    m_panel63->SetSizer(flexGridSizer55);
    
    gdsharelogoPanel = new wxPanel(m_panel63, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL|wxBORDER_SIMPLE);
    gdsharelogoPanel->SetBackgroundColour(wxColour(wxT("rgb(51,16,69)")));
    
    flexGridSizer55->Add(gdsharelogoPanel, 0, wxALL, 0);
    
    wxFlexGridSizer* flexGridSizer63 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer63->SetFlexibleDirection( wxBOTH );
    flexGridSizer63->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    gdsharelogoPanel->SetSizer(flexGridSizer63);
    
    m_staticBitmap57 = new wxStaticBitmap(gdsharelogoPanel, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("gdsharelogo")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer63->Add(m_staticBitmap57, 0, wxALL, 0);
    
    m_staticText65 = new wxStaticText(m_panel63, wxID_ANY, _("GameDevShare.com is a free online gaming platform for\ngames created with Game Develop."), wxDefaultPosition, wxSize(-1,-1), wxALIGN_CENTRE);
    
    flexGridSizer55->Add(m_staticText65, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_TOP, 10);
    
    wxStaticBoxSizer* staticBoxSizer110 = new wxStaticBoxSizer( new wxStaticBox(m_panel63, wxID_ANY, _("Note")), wxVERTICAL);
    
    flexGridSizer55->Add(staticBoxSizer110, 1, wxALL|wxEXPAND|wxALIGN_BOTTOM, 5);
    
    wxFlexGridSizer* flexGridSizer116 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer116->SetFlexibleDirection( wxBOTH );
    flexGridSizer116->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer116->AddGrowableCol(0);
    
    staticBoxSizer110->Add(flexGridSizer116, 1, wxALL|wxEXPAND, 0);
    
    m_staticText67 = new wxStaticText(m_panel63, wxID_ANY, _("Just click on the \"Export\" button and Game Develop will\npackage your game in a single zip file. Then you'll be\nasked for some information (Name of your game, your\nemail address) and the game will be uploaded on the website."), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer116->Add(m_staticText67, 0, wxALL|wxEXPAND|wxALIGN_CENTER, 5);
    
    m_panel61 = new wxPanel(exportChoice, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    exportChoice->AddPage(m_panel61, _("Export to a website"), false);
    
    wxFlexGridSizer* flexGridSizer34 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer34->SetFlexibleDirection( wxBOTH );
    flexGridSizer34->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer34->AddGrowableCol(0);
    m_panel61->SetSizer(flexGridSizer34);
    
    wxFlexGridSizer* flexGridSizer35 = new wxFlexGridSizer(  0, 3, 0, 0);
    flexGridSizer35->SetFlexibleDirection( wxBOTH );
    flexGridSizer35->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer35->AddGrowableCol(0);
    flexGridSizer35->AddGrowableRow(0);
    
    flexGridSizer34->Add(flexGridSizer35, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    
    wxFlexGridSizer* flexGridSizer36 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer36->SetFlexibleDirection( wxBOTH );
    flexGridSizer36->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer36->AddGrowableCol(1);
    
    flexGridSizer35->Add(flexGridSizer36, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    
    ID_STATICTEXT4 = new wxStaticText(m_panel61, wxID_ANY, _("Export folder:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer36->Add(ID_STATICTEXT4, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxFlexGridSizer* flexGridSizer38 = new wxFlexGridSizer(  0, 3, 0, 0);
    flexGridSizer38->SetFlexibleDirection( wxBOTH );
    flexGridSizer38->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer38->AddGrowableCol(0);
    flexGridSizer38->AddGrowableRow(0);
    
    flexGridSizer36->Add(flexGridSizer38, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    
    exportFolderEdit = new wxTextCtrl(m_panel61, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(201,23), 0);
    
    flexGridSizer38->Add(exportFolderEdit, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    browseBt = new wxButton(m_panel61, wxID_ANY, _("..."), wxDefaultPosition, wxSize(30,23), 0);
    
    flexGridSizer38->Add(browseBt, 1, wxRIGHT|wxTOP|wxBOTTOM|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    flexGridSizer36->Add(4, 9, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    minifyCheck = new wxCheckBox(m_panel61, wxID_ANY, _("Minify and optimize"), wxDefaultPosition, wxSize(-1,-1), 0);
    minifyCheck->SetValue(true);
    
    flexGridSizer36->Add(minifyCheck, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    ID_STATICTEXT2 = new wxStaticText(m_panel61, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer34->Add(ID_STATICTEXT2, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    ID_STATICTEXT1 = new wxStaticText(m_panel61, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer34->Add(ID_STATICTEXT1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    wxStaticBoxSizer* staticBoxSizer45 = new wxStaticBoxSizer( new wxStaticBox(m_panel61, wxID_ANY, _("Note")), wxVERTICAL);
    
    flexGridSizer34->Add(staticBoxSizer45, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    wxFlexGridSizer* flexGridSizer46 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer46->SetFlexibleDirection( wxBOTH );
    flexGridSizer46->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    staticBoxSizer45->Add(flexGridSizer46, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    
    ID_STATICTEXT3 = new wxStaticText(m_panel61, wxID_ANY, _("When the exportation is done, send the files to your website\n(you need a web hosting) and just go to the website to start\nthe game."), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer46->Add(ID_STATICTEXT3, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    ID_HYPERLINKCTRL2 = new wxHyperlinkCtrl(m_panel61, wxID_ANY, _("Click here to learn more about how to export your project"), wxT("http://wiki.compilgames.net/doku.php/en/game_develop/tutorials/howtodistribute"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    ID_HYPERLINKCTRL2->SetNormalColour(wxColour(wxT("#0000FF")));
    ID_HYPERLINKCTRL2->SetHoverColour(wxColour(wxT("#0000FF")));
    ID_HYPERLINKCTRL2->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    flexGridSizer46->Add(ID_HYPERLINKCTRL2, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 5);
    
    m_panel118 = new wxPanel(exportChoice, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    exportChoice->AddPage(m_panel118, _("Export to iOS or Android (with Intel XDK)"), false);
    
    wxFlexGridSizer* flexGridSizer5511 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer5511->SetFlexibleDirection( wxBOTH );
    flexGridSizer5511->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer5511->AddGrowableCol(0);
    flexGridSizer5511->AddGrowableRow(1);
    m_panel118->SetSizer(flexGridSizer5511);
    
    cocoonjslogoPanel22 = new wxPanel(m_panel118, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL|wxBORDER_SIMPLE);
    cocoonjslogoPanel22->SetBackgroundColour(wxColour(wxT("rgb(51,16,69)")));
    
    flexGridSizer5511->Add(cocoonjslogoPanel22, 0, wxALL, 0);
    
    wxFlexGridSizer* flexGridSizer6333 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer6333->SetFlexibleDirection( wxBOTH );
    flexGridSizer6333->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    cocoonjslogoPanel22->SetSizer(flexGridSizer6333);
    
    m_staticBitmap5744 = new wxStaticBitmap(cocoonjslogoPanel22, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("intelxdklogo")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer6333->Add(m_staticBitmap5744, 0, wxALL, 0);
    
    m_staticText6555 = new wxStaticText(m_panel118, wxID_ANY, _("Intel XDK is a technology that helps HTML5 developers\npublish their web-based games and apps for iOS,\nAndroid and other devices and web stores."), wxDefaultPosition, wxSize(-1,-1), wxALIGN_CENTRE);
    
    flexGridSizer5511->Add(m_staticText6555, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_TOP, 10);
    
    wxStaticBoxSizer* staticBoxSizer1126 = new wxStaticBoxSizer( new wxStaticBox(m_panel118, wxID_ANY, _("Note")), wxVERTICAL);
    
    flexGridSizer5511->Add(staticBoxSizer1126, 1, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer1147 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer1147->SetFlexibleDirection( wxBOTH );
    flexGridSizer1147->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer1147->AddGrowableCol(0);
    
    staticBoxSizer1126->Add(flexGridSizer1147, 1, wxALL|wxEXPAND, 0);
    
    m_staticText6768 = new wxStaticText(m_panel118, wxID_ANY, _("Just click on the \"Export\" button and Game Develop will\npackage your game.\nYou'll then be able to import the project into Intel XDK,\nwhich will allows you to compile the game into an\niOS and Android application."), wxDefaultPosition, wxSize(-1,-1), wxALIGN_LEFT);
    
    flexGridSizer1147->Add(m_staticText6768, 0, wxALL|wxEXPAND|wxALIGN_CENTER|wxALIGN_LEFT, 5);
    
    m_panel71 = new wxPanel(exportChoice, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL);
    exportChoice->AddPage(m_panel71, _("Mobile and web stores using CocoonJS (Experimental)"), false);
    
    wxFlexGridSizer* flexGridSizer551 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer551->SetFlexibleDirection( wxBOTH );
    flexGridSizer551->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer551->AddGrowableCol(0);
    flexGridSizer551->AddGrowableRow(1);
    m_panel71->SetSizer(flexGridSizer551);
    
    cocoonjslogoPanel2 = new wxPanel(m_panel71, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL|wxBORDER_SIMPLE);
    cocoonjslogoPanel2->SetBackgroundColour(wxColour(wxT("rgb(51,16,69)")));
    
    flexGridSizer551->Add(cocoonjslogoPanel2, 0, wxALL, 0);
    
    wxFlexGridSizer* flexGridSizer633 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer633->SetFlexibleDirection( wxBOTH );
    flexGridSizer633->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    cocoonjslogoPanel2->SetSizer(flexGridSizer633);
    
    m_staticBitmap574 = new wxStaticBitmap(cocoonjslogoPanel2, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("cocoonjslogo")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer633->Add(m_staticBitmap574, 0, wxALL, 0);
    
    m_staticText655 = new wxStaticText(m_panel71, wxID_ANY, _("CocoonJS is a technology that helps HTML5 developers\npublish their web-based games and apps in the most\nimportant mobile and web stores."), wxDefaultPosition, wxSize(-1,-1), wxALIGN_CENTRE);
    
    flexGridSizer551->Add(m_staticText655, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_TOP, 10);
    
    wxStaticBoxSizer* staticBoxSizer112 = new wxStaticBoxSizer( new wxStaticBox(m_panel71, wxID_ANY, _("Note")), wxVERTICAL);
    
    flexGridSizer551->Add(staticBoxSizer112, 1, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* flexGridSizer114 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer114->SetFlexibleDirection( wxBOTH );
    flexGridSizer114->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer114->AddGrowableCol(0);
    
    staticBoxSizer112->Add(flexGridSizer114, 1, wxALL|wxEXPAND, 0);
    
    m_staticText676 = new wxStaticText(m_panel71, wxID_ANY, _("Just click on the \"Export\" button and Game Develop will\npackage your game in a single zip file.\nYou'll then be able to upload this file on the cloud compiler\nat cloud.ludei.com, which will allows you to compile\nthe game into an iOS/Android app."), wxDefaultPosition, wxSize(-1,-1), wxALIGN_LEFT);
    
    flexGridSizer114->Add(m_staticText676, 0, wxALL|wxEXPAND|wxALIGN_CENTER|wxALIGN_LEFT, 5);
    
    wxFlexGridSizer* flexGridSizer50 = new wxFlexGridSizer(  0, 3, 0, 0);
    flexGridSizer50->SetFlexibleDirection( wxBOTH );
    flexGridSizer50->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer50->AddGrowableCol(0);
    
    flexGridSizer33->Add(flexGridSizer50, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    
    wxFlexGridSizer* flexGridSizer51 = new wxFlexGridSizer(  0, 3, 0, 0);
    flexGridSizer51->SetFlexibleDirection( wxBOTH );
    flexGridSizer51->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer51->AddGrowableRow(0);
    
    flexGridSizer50->Add(flexGridSizer51, 1, wxALL|wxALIGN_LEFT|wxALIGN_CENTER_VERTICAL, 0);
    
    ID_STATICBITMAP2 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("helpicon")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer51->Add(ID_STATICBITMAP2, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    ID_HYPERLINKCTRL1 = new wxHyperlinkCtrl(this, wxID_ANY, _("Help"), wxT("http://wiki.compilgames.net/doku.php/en/game_develop/tutorials/howtodistribute"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    ID_HYPERLINKCTRL1->SetToolTip(_("Display help about this window"));
    ID_HYPERLINKCTRL1->SetNormalColour(wxColour(wxT("#0000FF")));
    ID_HYPERLINKCTRL1->SetHoverColour(wxColour(wxT("#0000FF")));
    ID_HYPERLINKCTRL1->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    flexGridSizer51->Add(ID_HYPERLINKCTRL1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    closeBt = new wxButton(this, wxID_ANY, _("Close"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer50->Add(closeBt, 1, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5);
    
    exportBt = new wxButton(this, wxID_ANY, _("Export"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer50->Add(exportBt, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    
    SetSizeHints(-1,-1);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    browseBt->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnBrowseBtClick), NULL, this);
    closeBt->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnCloseBtClicked), NULL, this);
    exportBt->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnExportBtClicked), NULL, this);
    
}

BaseProjectExportDialog::~BaseProjectExportDialog()
{
    browseBt->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnBrowseBtClick), NULL, this);
    closeBt->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnCloseBtClicked), NULL, this);
    exportBt->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseProjectExportDialog::OnExportBtClicked), NULL, this);
    
}

BaseCocoonJSUploadDialog::BaseCocoonJSUploadDialog(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCB65InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxFlexGridSizer* flexGridSizer87 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer87->SetFlexibleDirection( wxBOTH );
    flexGridSizer87->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer87->AddGrowableCol(0);
    flexGridSizer87->AddGrowableRow(0);
    this->SetSizer(flexGridSizer87);
    
    cocoonjslogoPanel27 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxSize(-1,-1), wxTAB_TRAVERSAL|wxBORDER_SIMPLE);
    cocoonjslogoPanel27->SetBackgroundColour(wxColour(wxT("rgb(51,16,69)")));
    
    flexGridSizer87->Add(cocoonjslogoPanel27, 0, wxALL|wxALIGN_CENTER, 5);
    
    wxFlexGridSizer* flexGridSizer6338 = new wxFlexGridSizer(  0, 2, 0, 0);
    flexGridSizer6338->SetFlexibleDirection( wxBOTH );
    flexGridSizer6338->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    cocoonjslogoPanel27->SetSizer(flexGridSizer6338);
    
    m_staticBitmap5749 = new wxStaticBitmap(cocoonjslogoPanel27, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("cocoonjslogo")), wxDefaultPosition, wxSize(-1,-1), 0 );
    
    flexGridSizer6338->Add(m_staticBitmap5749, 0, wxALL, 0);
    
    m_staticText101 = new wxStaticText(this, wxID_ANY, _("You can now go on the Ludei's cloud compiler:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer87->Add(m_staticText101, 0, wxALL, 5);
    
    m_hyperLink104 = new wxHyperlinkCtrl(this, wxID_ANY, _("cloud.ludei.com"), wxT("https://cloud.ludei.com"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    m_hyperLink104->SetNormalColour(wxColour(wxT("#0000FF")));
    m_hyperLink104->SetHoverColour(wxColour(wxT("#0000FF")));
    m_hyperLink104->SetVisitedColour(wxColour(wxT("#FF0000")));
    
    flexGridSizer87->Add(m_hyperLink104, 0, wxALL|wxALIGN_CENTER, 5);
    
    wxFlexGridSizer* flexGridSizer1910 = new wxFlexGridSizer(  0, 1, 0, 0);
    flexGridSizer1910->SetFlexibleDirection( wxBOTH );
    flexGridSizer1910->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    flexGridSizer1910->AddGrowableCol(0);
    flexGridSizer1910->AddGrowableRow(0);
    
    flexGridSizer87->Add(flexGridSizer1910, 1, wxALL|wxEXPAND, 0);
    
    m_staticText15111 = new wxStaticText(this, wxID_ANY, _("The file to be uploaded was saved at this location on your computer:"), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer1910->Add(m_staticText15111, 0, wxALL, 5);
    
    packageLocationEdit = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxSize(-1,-1), wxTE_READONLY);
    
    flexGridSizer1910->Add(packageLocationEdit, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 5);
    
    m_staticText106 = new wxStaticText(this, wxID_ANY, _("On the cloud compiler, create a new project, add some required assets (splash\nscreens...) and upload this file. You'll then be able to compile the game for\nmost popular mobile phones and web stores."), wxDefaultPosition, wxSize(-1,-1), 0);
    
    flexGridSizer87->Add(m_staticText106, 0, wxALL, 5);
    
    m_button108 = new wxButton(this, wxID_ANY, _("Close"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_button108->SetDefault();
    m_button108->SetToolTip(_("Close this dialog"));
    
    flexGridSizer87->Add(m_button108, 0, wxALL|wxALIGN_RIGHT, 5);
    
    SetSizeHints(500,300);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    Centre(wxBOTH);
    // Connect events
    m_button108->Connect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseCocoonJSUploadDialog::OnCloseBtClicked), NULL, this);
    
}

BaseCocoonJSUploadDialog::~BaseCocoonJSUploadDialog()
{
    m_button108->Disconnect(wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(BaseCocoonJSUploadDialog::OnCloseBtClicked), NULL, this);
    
}
